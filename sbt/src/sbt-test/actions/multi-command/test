> ;set dynamicTask := { println("1");  println("2") }; dynamicTask

-> ; set dynamicTask := { throw new IllegalStateException("fail") }; dynamicTask

> set dynamicTask := { println("1");  println("2") }; dynamicTask

-> set dynamicTask := { throw new IllegalStateException("fail") }; dynamicTask

> ; setStringValue baz

> ; checkStringValue baz

> ; setStringValue foo; setStringValue bar

> checkStringValue bar

> ; setStringValue foo; setStringValue bar; setStringValue baz; checkStringValue baz

> setStringValue foo; setStringValue bar

> checkStringValue bar

> setStringValue foo; setStringValue bar; setStringValue baz

> checkStringValue baz

-> setStringValue foo; taskThatFails; setStringValue bar

> checkStringValue foo

# this fails even though the checkInput parser would parse the input into Seq("foo", "bar")
-> checkInput foo; bar

> checkInput foo

> compile; checkInput foo

> ++ 2.11.12 compile; setStringValue bar; checkStringValue bar

> ++2.12.11 compile; setStringValue foo; checkStringValue foo
